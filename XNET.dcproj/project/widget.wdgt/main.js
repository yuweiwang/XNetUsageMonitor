/* 
 This file was generated by Dashcode.  
 You may edit this file to customize your widget or web page 
 according to the license.txt file included in the project.
 */

//
// Function: load()
// Called by HTML body element's onload event when the widget is ready to start
//
function load()
{
    dashcode.setupParts();
        
    refresh();

}

//
// Function: refresh()
// 
//
function refresh() {
    user = widget.preferenceForKey("username");
    pass = widget.preferenceForKey("password");
    if(!(user && user.length>0 && pass && pass.length>0)) {
        showBack();
        return;
    }
    
    token = hex_md5(pass);
 
 /**
    if(window.XMLHttpRequest && !(window.ActiveXObject)) {
    	try {
        */
			httpreq = new XMLHttpRequest();
     /**   } catch(e) {
			httpreq = false;
        }
    // branch for IE/Windows ActiveX version
    } else if(window.ActiveXObject) {
       	try {
        	httpreq = new ActiveXObject("Msxml2.XMLHTTP");
      	} catch(e) {
        	try {
          		httpreq = new ActiveXObject("Microsoft.XMLHTTP");
        	} catch(e) {
          		httpreq = false;
        	}
		}
    }*/
    if(httpreq) {
		httpreq.onreadystatechange = stateHandle;
        url =  'https://api.xport.co.nz/usage/?username=' + user + '&token=' + token;
		httpreq.open("GET", url, true);
		httpreq.send("");
	}
}

function stateHandle() {
    if(httpreq.readyState == 4) { // complete process
		if(httpreq.status == 200) { // no problem
			bpc = httpreq.responseXML.getElementsByTagName('bpc')[0].childNodes[0].nodeValue;
			total = parseFloat(httpreq.responseXML.getElementsByTagName('total')[0].childNodes[0].nodeValue/1024).toFixed(2);
			freedataused = parseFloat(httpreq.responseXML.getElementsByTagName('freedataused')[0].childNodes[0].nodeValue/1024).toFixed(2);
			lastupdate = httpreq.responseXML.getElementsByTagName('lastupdate')[0].childNodes[0].nodeValue;
			// write file
            textField.value = "$" + bpc;
            textField1.value = total + " GB";
            textField2.value = freedataused + " GB";
            textField3.value = lastupdate;
            document.getElementById("levelIndicator").object.setValue((freedataused/75)*10)
        } else if(httpreq.status == 0) { // broken
            //textField.value = url;
        }
    }
}

//
// Function: remove()
// Called when the widget has been removed from the Dashboard
//
function remove()
{
    // Stop any timers to prevent CPU usage
    // Remove any preferences as needed
    // widget.setPreferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
}

//
// Function: hide()
// Called when the widget has been hidden
//
function hide()
{
    // Stop any timers to prevent CPU usage
}

//
// Function: show()
// Called when the widget has been shown
//
function show()
{
    // Restart any timers that were stopped on hide
}

//
// Function: sync()
// Called when the widget has been synchronized with .Mac
//
function sync()
{
    // Retrieve any preference values that you need to be synchronized here
    // Use this for an instance key's value:
    // instancePreferenceValue = widget.preferenceForKey(null, dashcode.createInstancePreferenceKey("your-key"));
    //
    // Or this for global key's value:
    // globalPreferenceValue = widget.preferenceForKey(null, "your-key");
}

//
// Function: showBack(event)
// Called when the info button is clicked to show the back of the widget
//
// event: onClick event from the info button
//
function showBack(event)
{
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToBack");
    }

    front.style.display = "none";
    back.style.display = "block";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
    
    textField4.value = user;
    textField5.value = pass;
}

//
// Function: showFront(event)
// Called when the done button is clicked from the back of the widget
//
// event: onClick event from the done button
//
function showFront(event)
{
    if(window.widget) {
        widget.setPreferenceForKey(textField4.value, "username");
        widget.setPreferenceForKey(textField5.value, "password");
        user = widget.preferenceForKey("username");
        pass = widget.preferenceForKey("password");
    }
    var front = document.getElementById("front");
    var back = document.getElementById("back");

    if (window.widget) {
        widget.prepareForTransition("ToFront");
    }

    front.style.display="block";
    back.style.display="none";

    if (window.widget) {
        setTimeout('widget.performTransition();', 0);
    }
}

if (window.widget) {
    widget.onremove = remove;
    widget.onhide = hide;
    widget.onshow = show;
    widget.onsync = sync;
}


function myClickHandler(event)
{
    refresh();
}
